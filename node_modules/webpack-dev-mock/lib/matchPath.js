"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint @typescript-eslint/no-var-requires:0 */
var pathToRegexp = require("path-to-regexp");
function decodeParam(val) {
    if (typeof val !== 'string' || val.length === 0) {
        return val;
    }
    try {
        return decodeURIComponent(val);
    }
    catch (err) {
        if (err instanceof URIError) {
            err.message = "Failed to decode param ' " + val + " '";
            err.status = 400;
            err.statusCode = 400;
        }
        throw err;
    }
}
function matchPath(req, mockConfig) {
    var reqMethod = req.method;
    // compatible with http server
    var reqPath = req.path || req.url;
    for (var m = 0; m < mockConfig.length; m += 1) {
        var mock = mockConfig[m];
        var mockPath = mock.path, mockMethod = mock.method;
        var keys = [];
        var regexp = pathToRegexp(mockPath, keys);
        if (mockMethod.toLowerCase() === reqMethod.toLowerCase()) {
            var match = regexp.exec(reqPath);
            if (match) {
                var params = {};
                for (var i = 1; i < match.length; i += 1) {
                    var key = keys[i - 1];
                    var prop = key.name;
                    var val = decodeParam(match[i]);
                    if (val !== undefined || !Object.prototype.hasOwnProperty.call(params, prop)) {
                        params[prop] = val;
                    }
                }
                req.params = params;
                return mock;
            }
        }
    }
}
exports.default = matchPath;
//# sourceMappingURL=matchPath.js.map