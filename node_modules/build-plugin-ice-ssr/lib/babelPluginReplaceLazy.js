var lazyImportName = 'lazy';
var loadableImportName = 'loadable';
module.exports = function (_a) {
    var t = _a.types;
    return {
        visitor: {
            Program: {
                enter: function (programPath) {
                    programPath.traverse({
                        ImportDeclaration: function (nodePath) {
                            var node = nodePath.node;
                            if (t.isStringLiteral(node.source, { value: 'ice' })) {
                                var specifiers = node.specifiers;
                                specifiers.forEach(function (specifier) {
                                    var imported = specifier.imported, local = specifier.local;
                                    var importedName = imported.name;
                                    var localName = local.name;
                                    if (localName !== importedName) {
                                        return;
                                    }
                                    if (importedName === lazyImportName) {
                                        // from `import {lazy} from 'ice';` to `import {lazy as loadable} from 'ice';`
                                        nodePath.replaceWith(t.importDeclaration([
                                            t.importSpecifier(t.identifier(loadableImportName), t.identifier(lazyImportName))
                                        ], t.stringLiteral(node.source.value)));
                                    }
                                });
                            }
                        },
                        CallExpression: function (nodePath) {
                            var calleeName = nodePath.node.callee.name;
                            if (calleeName && calleeName === lazyImportName) {
                                // from `lazy(() => import(''))` to `loadable(() => import(''))`
                                nodePath.replaceWith(t.callExpression(t.identifier(loadableImportName), nodePath.node.arguments));
                            }
                        }
                    });
                },
            }
        }
    };
};
//# sourceMappingURL=babelPluginReplaceLazy.js.map