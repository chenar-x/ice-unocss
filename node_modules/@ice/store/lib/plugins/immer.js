import produce, { enableES5 } from 'immer';
import { combineReducers } from 'redux';
// make it work in IE11
enableES5();
function createCombineReducersWithImmer(blacklist) {
    if (blacklist === void 0) { blacklist = []; }
    return function (reducers) {
        var reducersWithImmer = {};
        // reducer must return value because literal don't support immer
        Object.keys(reducers).forEach(function (key) {
            var reducerFn = reducers[key];
            reducersWithImmer[key] = function (state, payload) {
                return typeof state === 'object' && !blacklist.includes(key)
                    ? produce(state, function (draft) {
                        var next = reducerFn(draft, payload);
                        if (typeof next === 'object')
                            return next;
                    })
                    : reducerFn(state, payload);
            };
        });
        return combineReducers(reducersWithImmer);
    };
}
// icestore plugin
var immerPlugin = function (config) {
    if (config === void 0) { config = {}; }
    return ({
        config: {
            redux: {
                combineReducers: createCombineReducersWithImmer(config.blacklist),
            },
        },
    });
};
export default immerPlugin;
