var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import actionTypes from '../actionTypes';
var SET_STATE = actionTypes.SET_STATE;
export default function (originModels) {
    var models = {};
    Object.keys(originModels).forEach(function (name) {
        var model = originModels[name];
        if (!model.reducers) {
            model.reducers = {};
        }
        if (!model.reducers.setState) {
            model.reducers.setState = function (state, payload) { return (__assign(__assign({}, state), payload)); };
        }
        if (!model.reducers[SET_STATE]) {
            model.reducers[SET_STATE] = function (state, payload) { return payload; };
        }
        models[name] = model;
    });
    return models;
}
