"use strict";

exports.__esModule = true;
exports.default = void 0;

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Location = /*#__PURE__*/function () {
  function Location() {
    this._currentPageOptions = {};
    this.hash = '';
  }

  var _proto = Location.prototype;

  _proto.__updatePageOption = function __updatePageOption(pageOptions) {
    this._currentPageOptions = pageOptions;
  };

  _proto.__updatePageId = function __updatePageId(pageId) {
    this._pageId = pageId;
  };

  _createClass(Location, [{
    key: "href",
    get: function get() {
      return this.pathname + this.search;
    }
  }, {
    key: "search",
    get: function get() {
      var _this = this;

      var search = '';
      Object.keys(this._currentPageOptions).forEach(function (key, index) {
        var query = key + "=" + _this._currentPageOptions[key];
        search += index === 0 ? '?' : '&';
        search += query;
      });
      return search;
    }
  }, {
    key: "pathname",
    get: function get() {
      // eslint-disable-next-line no-undef
      var pages = getCurrentPages();
      if (pages.length === 0) return '';
      var currentPage = pages[pages.length - 1];
      return addLeadingSlash(currentPage.route);
    }
  }]);

  return Location;
}();

exports.default = Location;

function addLeadingSlash(str) {
  return str[0] === '/' ? str : '/' + str;
}