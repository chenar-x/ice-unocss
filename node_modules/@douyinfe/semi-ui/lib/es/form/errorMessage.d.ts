import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
export declare type ReactFieldError = boolean | string | Array<any> | React.ReactNode | undefined;
export interface ErrorMessageProps {
    error?: ReactFieldError;
    className?: string;
    style?: React.CSSProperties;
    showValidateIcon?: boolean;
    validateStatus?: string;
    helpText?: React.ReactNode;
    isInInputGroup?: boolean;
}
export default class ErrorMessage extends PureComponent<ErrorMessageProps> {
    static propTypes: {
        error: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        validateStatus: PropTypes.Requireable<string>;
        showValidateIcon: PropTypes.Requireable<boolean>;
        helpText: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        isInInputGroup: PropTypes.Requireable<boolean>;
    };
    generatorText(error: ReactFieldError): JSX.Element;
    render(): JSX.Element;
}
