import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import '@douyinfe/semi-foundation/lib/es/descriptions/descriptions.css';
import { DescriptionsAlign } from './descriptions-context';
import Item from './item';
export { DescriptionsItemProps } from './item';
export declare type DescriptionsSize = 'small' | 'medium' | 'large';
export interface Data {
    [x: string]: any;
    key?: string | number;
    value?: (() => React.ReactNode) | React.ReactNode;
    hidden?: boolean;
}
export interface DescriptionsProps {
    align?: DescriptionsAlign;
    row?: boolean;
    size?: DescriptionsSize;
    style?: React.CSSProperties;
    className?: string;
    data?: Data[];
}
declare class Descriptions extends PureComponent<DescriptionsProps> {
    static Item: typeof Item;
    static contextType: React.Context<import("./descriptions-context").DescriptionsContextValue>;
    static propTypes: {
        align: PropTypes.Requireable<string>;
        row: PropTypes.Requireable<boolean>;
        size: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        className: PropTypes.Requireable<string>;
        data: PropTypes.Requireable<PropTypes.InferProps<{
            key: PropTypes.Requireable<PropTypes.ReactNodeLike>;
            value: PropTypes.Requireable<PropTypes.ReactNodeLike>;
            hidden: PropTypes.Requireable<boolean>;
            className: PropTypes.Requireable<string>;
            style: PropTypes.Requireable<object>;
        }>[]>;
    };
    static defaultProps: {
        align: string;
        row: boolean;
        size: string;
        data: Data[];
    };
    render(): JSX.Element;
}
export default Descriptions;
