import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import '@douyinfe/semi-foundation/lib/es/badge/badge.css';
export declare type BadgeType = 'primary' | 'secondary' | 'tertiary' | 'danger' | 'warning';
export declare type BadgeTheme = 'solid' | 'light' | 'inverted';
export declare type BadgePosition = 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom';
export interface BadgeProps {
    count?: React.ReactNode;
    dot?: boolean;
    type?: BadgeType;
    theme?: BadgeTheme;
    position?: BadgePosition;
    overflowCount?: number;
    style?: React.CSSProperties;
    className?: string;
    children?: React.ReactNode;
}
export default class Badge extends PureComponent<BadgeProps> {
    static contextType: React.Context<import("../configProvider/context").ContextValue>;
    static propTypes: {
        count: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        dot: PropTypes.Requireable<boolean>;
        type: PropTypes.Requireable<string>;
        theme: PropTypes.Requireable<string>;
        position: PropTypes.Requireable<string>;
        overflowCount: PropTypes.Requireable<number>;
        style: PropTypes.Requireable<object>;
        className: PropTypes.Requireable<string>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    };
    static defaultProps: {
        dot: boolean;
        type: string;
        theme: string;
        className: string;
    };
    render(): JSX.Element;
}
