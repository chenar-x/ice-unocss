import React, { CSSProperties } from 'react';
import PropTypes from 'prop-types';
export interface ResponsiveMap {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xxl: string;
}
export interface SiderProps {
    prefixCls?: string;
    style?: CSSProperties;
    className?: string;
    breakpoint?: Array<keyof ResponsiveMap>;
    onBreakpoint?: (screen: keyof ResponsiveMap, match: boolean) => void;
}
declare class Sider extends React.PureComponent<SiderProps> {
    static propTypes: {
        prefixCls: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        className: PropTypes.Requireable<string>;
        breakpoint: PropTypes.Requireable<string[]>;
        onBreakpoint: PropTypes.Requireable<(...args: any[]) => any>;
    };
    static defaultProps: {
        prefixCls: string;
    };
    static contextType: React.Context<import("./layout-context").ContextType>;
    unRegisters: Array<() => void>;
    uniqueId: string;
    constructor(props: SiderProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    responsiveHandler(screen: keyof ResponsiveMap, matches: boolean): void;
    render(): JSX.Element;
}
export default Sider;
