import React from 'react';
import PropTypes from 'prop-types';
import BaseComponent from '../_base/baseComponent';
import LinkFoundation, { LinkAdapter } from '@douyinfe/semi-foundation/lib/cjs/anchor/linkFoundation';
export interface LinkProps {
    href?: string;
    title?: string | React.ReactNode;
    className?: string;
    style?: React.CSSProperties;
    disabled?: boolean;
}
export default class Link extends BaseComponent<LinkProps, {}> {
    static propTypes: {
        href: PropTypes.Requireable<string>;
        title: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        className: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
    };
    static defaultProps: {
        href: string;
        title: string;
        className: string;
    };
    static contextType: React.Context<import("./anchor-context").AnchorContextType>;
    foundation: LinkFoundation;
    constructor(props: LinkProps);
    get adapter(): LinkAdapter;
    handleAddLink(): void;
    handleRemoveLink(): void;
    handleUpdateLink(href: string, prevHref: string): void;
    componentDidMount(): void;
    componentDidUpdate(prevProps: LinkProps): void;
    componentWillUnmount(): void;
    renderTitle: () => React.ReactNode;
    renderChildren: () => React.ReactNode;
    render(): JSX.Element;
}
