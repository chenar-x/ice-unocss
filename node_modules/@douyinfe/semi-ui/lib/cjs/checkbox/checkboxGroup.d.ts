import React from 'react';
import PropTypes from 'prop-types';
import { CheckboxGroupAdapter } from '@douyinfe/semi-foundation/lib/cjs/checkbox/checkboxGroupFoundation';
import BaseComponent from '../_base/baseComponent';
import { CheckboxEvent } from './checkbox';
export declare type CheckboxDirection = 'horizontal' | 'vertical';
export declare type CheckboxType = 'default' | 'card' | 'pureCard';
export declare type CheckboxGroupProps = {
    defaultValue?: any[];
    disabled?: boolean;
    name?: string;
    options?: any[];
    value?: any[];
    onChange?: (value: any[]) => void;
    children?: React.ReactNode;
    prefixCls?: string;
    direction?: CheckboxDirection;
    style?: React.CSSProperties;
    className?: string;
    type?: CheckboxType;
    id?: string;
};
export declare type CheckboxGroupState = {
    value?: any[];
};
declare class CheckboxGroup extends BaseComponent<CheckboxGroupProps, CheckboxGroupState> {
    static propTypes: {
        defaultValue: PropTypes.Requireable<any[]>;
        disabled: PropTypes.Requireable<boolean>;
        name: PropTypes.Requireable<string>;
        options: PropTypes.Requireable<any[]>;
        value: PropTypes.Requireable<any[]>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        prefixCls: PropTypes.Requireable<string>;
        direction: PropTypes.Requireable<CheckboxDirection>;
        className: PropTypes.Requireable<string>;
        type: PropTypes.Requireable<"default" | "card" | "pureCard">;
        style: PropTypes.Requireable<object>;
    };
    static defaultProps: Partial<CheckboxGroupProps>;
    get adapter(): CheckboxGroupAdapter;
    constructor(props: CheckboxGroupProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: CheckboxGroupProps): void;
    componentWillUnmount(): void;
    onChange(evt: CheckboxEvent): void;
    render(): JSX.Element;
}
export default CheckboxGroup;
