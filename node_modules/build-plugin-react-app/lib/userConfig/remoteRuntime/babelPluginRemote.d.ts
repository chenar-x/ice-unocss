import * as t from '@babel/types';
import type { NodePath } from '@babel/traverse';
declare type ILibs = (string | RegExp)[];
interface IOpts {
    libs: ILibs;
    remoteName: string;
}
declare const _default: (babel: any, opts: IOpts) => {
    visitor: {
        ImportDeclaration: {
            exit(nodePath: NodePath<t.ImportDeclaration>): void;
        };
        ExportNamedDeclaration: {
            exit(nodePath: NodePath<t.ExportNamedDeclaration>): void;
        };
        ExportAllDeclaration: {
            exit(nodePath: NodePath<t.ExportAllDeclaration>): void;
        };
        CallExpression: {
            exit(nodePath: NodePath<t.CallExpression>): void;
        };
    };
};
export default _default;
