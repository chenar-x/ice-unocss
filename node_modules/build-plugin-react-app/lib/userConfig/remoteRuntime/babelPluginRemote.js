"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var t = require("@babel/types");
var isMatchRemote = function (source, libs) {
    return libs.some(function (lib) {
        if (typeof lib === 'string') {
            return lib === source;
        }
        else {
            return lib.test(source);
        }
    });
};
var modifyDeclarationSource = function (nodePath, _a) {
    var libs = _a.libs, remoteName = _a.remoteName;
    var node = nodePath.node;
    if (node.source) {
        var source = node.source.value;
        if (isMatchRemote(node.source.value, libs) && process.env.RRE_BUILD !== 'true') {
            node.source = t.stringLiteral(remoteName + "/" + source);
        }
    }
};
exports.default = (function (babel, opts) {
    return {
        visitor: {
            ImportDeclaration: {
                exit: function (nodePath) {
                    modifyDeclarationSource(nodePath, opts);
                }
            },
            ExportNamedDeclaration: {
                exit: function (nodePath) {
                    modifyDeclarationSource(nodePath, opts);
                }
            },
            ExportAllDeclaration: {
                exit: function (nodePath) {
                    modifyDeclarationSource(nodePath, opts);
                }
            },
            CallExpression: {
                exit: function (nodePath) {
                    var node = nodePath.node;
                    var libs = opts.libs, remoteName = opts.remoteName;
                    if (t.isImport(node.callee)) {
                        var source = node.arguments[0].value;
                        if (isMatchRemote(source, libs)) {
                            node.arguments[0] = t.stringLiteral(remoteName + "/" + source);
                        }
                    }
                }
            },
        }
    };
});
//# sourceMappingURL=babelPluginRemote.js.map