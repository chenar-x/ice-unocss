var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var getJestConfig = require('@builder/jest-config').default;
var logWebpackConfig = require('./utils/logWebpackConfig');
module.exports = function (api) {
    var onHook = api.onHook, onGetJestConfig = api.onGetJestConfig, context = api.context;
    var rootDir = context.rootDir;
    onHook('before.test.run', function (_a) {
        var config = _a.config;
        logWebpackConfig(config);
    });
    onGetJestConfig(function (jestConfig) {
        var moduleNameMapper = jestConfig.moduleNameMapper, rest = __rest(jestConfig, ["moduleNameMapper"]);
        Object.keys(moduleNameMapper).forEach(function (key) {
            // escape $ in the beginning. because $ match the end position end in regular expression
            // '^$ice/history$' -> '^\$ice/history$'
            if (key.indexOf('^$') === 0) {
                var newKey = "^\\" + key.slice(1);
                moduleNameMapper[newKey] = moduleNameMapper[key];
                delete moduleNameMapper[key];
            }
            ;
        });
        var defaultJestConfig = getJestConfig({ rootDir: rootDir, moduleNameMapper: moduleNameMapper });
        return __assign(__assign(__assign({}, defaultJestConfig), rest), { 
            // defaultJestConfig.moduleNameMapper already combine jestConfig.moduleNameMapper
            moduleNameMapper: defaultJestConfig.moduleNameMapper });
    });
};
//# sourceMappingURL=setTest.js.map