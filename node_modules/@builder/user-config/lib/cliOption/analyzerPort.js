var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
module.exports = function (config, port) {
    if (port && config.plugins.get('webpack-bundle-analyzer')) {
        config.plugin('webpack-bundle-analyzer').tap(function (_a) {
            var args = _a[0];
            var newArgs = __assign(__assign({}, args), { analyzerPort: port });
            return [newArgs];
        });
    }
};
//# sourceMappingURL=analyzerPort.js.map