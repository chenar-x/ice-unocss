var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var path = require('path');
var last = require('@builder/pack/deps/lodash').last;
var formatPath = require('@builder/app-helpers').formatPath;
function getFilename(filePath) {
    return last((filePath || '').split('/'));
}
module.exports = function (config, outputAssetsPath) {
    var filename = getFilename(config.output.get('filename'));
    config.output.filename(formatPath(path.join(outputAssetsPath.js || '', filename)));
    if (config.plugins.get('MiniCssExtractPlugin')) {
        var options_1 = config.plugin('MiniCssExtractPlugin').get('args')[0];
        config.plugin('MiniCssExtractPlugin').tap(function (args) { return [Object.assign.apply(Object, __spreadArray(__spreadArray([], args, false), [{
                    filename: formatPath(path.join(outputAssetsPath.css || '', getFilename(options_1.filename))),
                }], false))]; });
    }
};
//# sourceMappingURL=outputAssetsPath.js.map