var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
module.exports = function (config, define) {
    if (config.plugins.get('DefinePlugin')) {
        var defineVariables_1 = {};
        // JSON.stringify define values
        Object.keys(define).forEach(function (defineKey) {
            defineVariables_1[defineKey] = JSON.stringify(define[defineKey]);
        });
        config
            .plugin('DefinePlugin')
            .tap(function (args) { return [Object.assign.apply(Object, __spreadArray(__spreadArray([], args, false), [defineVariables_1], false))]; });
    }
};
//# sourceMappingURL=define.js.map