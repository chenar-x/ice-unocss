var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
module.exports = function (config, cssLoaderOptions) {
    if (cssLoaderOptions) {
        var modules = cssLoaderOptions.modules, restOptions_1 = __rest(cssLoaderOptions, ["modules"]);
        [
            'scss',
            'scss-module',
            'scss-global',
            'css',
            'css-module',
            'css-global',
            'less',
            'less-module',
            'less-global',
        ].forEach(function (rule) {
            if (config.module.rules.get(rule)) {
                var isCSSModule_1 = /-module$/.test(rule);
                config.module
                    .rule(rule)
                    .use('css-loader')
                    .tap(function (options) { return (__assign(__assign({}, options), (isCSSModule_1 ? cssLoaderOptions : restOptions_1))); });
            }
        });
    }
};
//# sourceMappingURL=cssLoaderOptions.js.map