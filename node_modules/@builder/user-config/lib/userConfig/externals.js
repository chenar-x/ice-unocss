var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
module.exports = function (config, value) {
    if (config.has('externals')) {
        var externals = config.get('externals');
        if (Array.isArray(externals)) {
            config.externals(__spreadArray(__spreadArray([], externals, true), [value], false));
        }
        else {
            config.externals([externals, value]);
        }
    }
    else {
        // compatible with object externals
        config.merge({ externals: value });
    }
};
//# sourceMappingURL=externals.js.map