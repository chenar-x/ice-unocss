var path = require('path');
var addSideEffect = require('@babel/helper-module-imports').addSideEffect;
var coreJSPath = path.dirname(require.resolve('core-js/package.json'));
// eslint-disable-next-line no-unused-vars
module.exports = function (_a, _b) {
    var types = _a.types;
    var fileList = _b.fileList;
    return {
        visitor: {
            Program: {
                exit: function (programPath, state) {
                    var entryFile = fileList.find(function (filePath) {
                        // filePath may not have an extension
                        return filePath.includes((state.filename || '').replace(/\.[^/.]+$/, ''));
                    });
                    if (entryFile) {
                        var importList_1 = [];
                        programPath.traverse({
                            ImportDeclaration: function (nodePath) {
                                var node = nodePath.node;
                                // only replace core-js/modules/xxx added by @babel/preset-env
                                if (node.source.value.startsWith('core-js/modules')) {
                                    var file = nodePath && nodePath.hub && nodePath.hub.file || state && state.file;
                                    // add core-js import declaration at the top of file, Fix: https://github.com/alibaba/ice/issues/4276
                                    importList_1.push([file.path, node.source.value.replace('core-js/', coreJSPath + "/")]);
                                    nodePath.remove();
                                }
                            },
                        });
                        importList_1.reverse().forEach(function (_a) {
                            var filePath = _a[0], identifier = _a[1];
                            addSideEffect(filePath, identifier);
                        });
                    }
                }
            },
        },
    };
};
//# sourceMappingURL=babelPluginCorejsLock.js.map