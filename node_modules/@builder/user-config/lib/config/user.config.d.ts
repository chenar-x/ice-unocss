declare const _exports: {
    [n: number]: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    length: number;
    toString(): string;
    toLocaleString(): string;
    pop(): {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    push(...items: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]): number;
    concat(...items: ConcatArray<{
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }>[]): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    concat(...items: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    } | ConcatArray<{
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }>)[]): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    join(separator?: string): string;
    reverse(): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    shift(): {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    slice(start?: number, end?: number): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    sort(compareFn?: (a: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, b: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }) => number): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    splice(start: number, deleteCount?: number): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    splice(start: number, deleteCount: number, ...items: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    unshift(...items: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]): number;
    indexOf(searchElement: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, fromIndex?: number): number;
    lastIndexOf(searchElement: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, fromIndex?: number): number;
    every<S extends {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }>(predicate: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => value is S, thisArg?: any): this is S[];
    every(predicate: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => unknown, thisArg?: any): boolean;
    some(predicate: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => unknown, thisArg?: any): boolean;
    forEach(callbackfn: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => void, thisArg?: any): void;
    map<U>(callbackfn: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => U, thisArg?: any): U[];
    filter<S_1 extends {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }>(predicate: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => value is S_1, thisArg?: any): S_1[];
    filter(predicate: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => unknown, thisArg?: any): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    reduce(callbackfn: (previousValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentIndex: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }): {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    reduce(callbackfn: (previousValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentIndex: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, initialValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }): {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    reduce<U_1>(callbackfn: (previousValue: U_1, currentValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentIndex: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => U_1, initialValue: U_1): U_1;
    reduceRight(callbackfn: (previousValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentIndex: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }): {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    reduceRight(callbackfn: (previousValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentIndex: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, initialValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }): {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    reduceRight<U_2>(callbackfn: (previousValue: U_2, currentValue: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, currentIndex: number, array: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => U_2, initialValue: U_2): U_2;
    find<S_2 extends {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }>(predicate: (this: void, value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, obj: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => value is S_2, thisArg?: any): S_2;
    find(predicate: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, obj: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => unknown, thisArg?: any): {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    };
    findIndex(predicate: (value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, index: number, obj: ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[]) => unknown, thisArg?: any): number;
    fill(value: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, start?: number, end?: number): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    copyWithin(target: number, start: number, end?: number): ({
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    })[];
    entries(): IterableIterator<[number, {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }]>;
    keys(): IterableIterator<number>;
    values(): IterableIterator<{
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }>;
    includes(searchElement: {
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }, fromIndex?: number): boolean;
    [Symbol.iterator](): IterableIterator<{
        name: string;
        validation: string;
        defaultValue: {};
    } | {
        name: string;
        validation: string;
        defaultValue: string;
    } | {
        name: string;
        validation: string;
        defaultValue: string[];
    } | {
        name: string;
        validation: string;
        defaultValue: {
            ignored: RegExp;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: {
            allowedHosts: string;
            hot: boolean;
            compress: boolean;
            webSocketServer: string;
            devMiddleware: {
                publicPath: string;
            };
            static: {
                watch: {
                    ignored: RegExp;
                };
            };
            client: {
                overlay: boolean;
                logging: string;
            };
            onBeforeSetupMiddleware({ app }: {
                app: any;
            }): void;
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: {
            exclude: string[];
        };
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: boolean;
    } | {
        name: string;
        validation: string;
        defaultValue: {
            js: string;
            css: string;
        };
    } | {
        name: string;
        validation: string;
        defaultValue: boolean;
    } | {
        name: string;
        validation: (val: any) => any;
        defaultValue: string;
    } | {
        name: string;
        validation: (val: any) => any;
    } | {
        name: string;
        validation: string;
    }>;
    [Symbol.unscopables](): {
        copyWithin: boolean;
        entries: boolean;
        fill: boolean;
        find: boolean;
        findIndex: boolean;
        keys: boolean;
        values: boolean;
    };
};
export = _exports;
