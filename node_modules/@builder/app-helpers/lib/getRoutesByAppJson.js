"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs-extra");
// Get entries when exist app.json
function default_1(target, _a) {
    var _b;
    var appJsonPath = _a.appJsonPath, appJsonContent = _a.appJsonContent;
    var staticConfig = appJsonContent;
    if (appJsonPath) {
        var appJSON = appJsonContent || fs.readFileSync(appJsonPath);
        staticConfig = JSON.parse(appJSON);
    }
    if (!staticConfig.routes || !Array.isArray(staticConfig.routes)) {
        throw new Error('routes should be an array in app.json.');
    }
    var routes = staticConfig.routes.filter(function (route) {
        if (Array.isArray(route.targets) && !route.targets.includes(target)) {
            return false;
        }
        return true;
    });
    if ((_b = staticConfig === null || staticConfig === void 0 ? void 0 : staticConfig.tabBar) === null || _b === void 0 ? void 0 : _b.source) {
        routes.push(__assign(__assign({}, staticConfig.tabBar), { __tabBar: true }));
    }
    return routes;
}
exports.default = default_1;
//# sourceMappingURL=getRoutesByAppJson.js.map