"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.wp2vite = void 0;
var plugin_react_refresh_1 = require("@vitejs/plugin-react-refresh");
var rollup_plugin_visualizer_1 = require("rollup-plugin-visualizer");
var path = require("path");
var deepmerge_1 = require("deepmerge");
var lodash_1 = require("lodash");
var vite_plugin_ts_types_1 = require("vite-plugin-ts-types");
var vite_plugin_eslint_report_1 = require("vite-plugin-eslint-report");
var config_1 = require("./config");
var plugins_1 = require("../plugins");
var getAnalyzer = function (config) {
    if (!config.plugins.get('webpack-bundle-analyzer'))
        return;
    return (0, rollup_plugin_visualizer_1.default)({ open: true, brotliSize: true, filename: 'ice-stats.html' });
};
var getWebpackConfig = function (context) {
    var configArr = context.getWebpackConfig();
    return configArr[0];
};
var isBuild = function (command) { return command === 'build'; };
var getHtmlPlugin = function (context) {
    var getValue = context.getValue, userConfig = context.userConfig, rootDir = context.rootDir;
    var isMpa = userConfig.mpa;
    if (!isMpa) {
        return (0, plugins_1.htmlPlugin)({
            entry: userConfig.entry,
            template: path.resolve(rootDir, 'public', 'index.html'),
            filename: 'index.html',
            rootDir: rootDir
        });
    }
    var pages = __assign({ index: {
            template: path.resolve(rootDir, 'public', 'index.html'),
            filename: 'index.html',
        } }, getValue('MPA_PAGES'));
    var entries = userConfig.entry;
    var mpaHtmlPlugins = Object.keys(entries).map(function (entryName) {
        var _a;
        var singlePage = (_a = pages[entryName]) !== null && _a !== void 0 ? _a : pages.index;
        if (entryName === 'index') {
            return (0, plugins_1.htmlPlugin)(__assign(__assign({}, singlePage), { entry: entries[entryName][0], // webpack entry
                rootDir: rootDir }));
        }
        return (0, plugins_1.htmlPlugin)(__assign(__assign({}, singlePage), { entry: entries[entryName][0], // webpack entry
            rootDir: rootDir }));
    });
    return mpaHtmlPlugins;
};
var getOpen = function (context) {
    var getValue = context.getValue;
    // if spa : SERVER_PATH is undefined
    var page = getValue('SERVER_PATH');
    if (page && !page.startsWith('/')) {
        page = "/" + page;
    }
    return page !== null && page !== void 0 ? page : true;
};
/**
 * Exposed
 */
var wp2vite = function (context) {
    var _a;
    var _b = context.commandArgs, commandArgs = _b === void 0 ? {} : _b, userConfig = context.userConfig, originalUserConfig = context.originalUserConfig, rootDir = context.rootDir, command = context.command;
    var config = getWebpackConfig(context);
    var viteConfig = {
        configFile: false,
        // ice 开发调试时保证 cjs 依赖转为 esm 文件
        plugins: [
            userConfig.mock && (0, plugins_1.mockPlugin)((_a = userConfig.mock) === null || _a === void 0 ? void 0 : _a.exclude),
            getAnalyzer(config.chainConfig),
            // TODO: User Config Type Completion
            (0, plugins_1.externalsPlugin)(userConfig.externals),
            (0, plugins_1.importPlugin)({ rootDir: rootDir, entries: userConfig.entry }),
            // spa 与 mpa 中对 html 的处理
            (0, plugins_1.serverHistoryPlugin)(config.chainConfig.devServer.get('historyApiFallback')),
            getHtmlPlugin(context),
            userConfig.tsChecker && (0, vite_plugin_ts_types_1.default)(),
            (0, plugins_1.polyfillPlugin)({
                value: originalUserConfig.polyfill,
                browserslist: userConfig.browserslist,
                hash: userConfig.hash,
                outputAssetsPath: userConfig.outputAssetsPath,
                rootDir: rootDir,
            }),
            userConfig.ignoreHtmlTemplate ? (0, plugins_1.ignoreHtmlPlugin)(rootDir) : null,
        ].filter(Boolean),
    };
    if (userConfig.eslint !== false) {
        var eslintOptions = { ignoreInitial: false };
        if (!userConfig.eslint) {
            // lint only changed files, skip lint on start
            eslintOptions.ignoreInitial = true;
        }
        else {
            eslintOptions = __assign(__assign({}, eslintOptions), userConfig.eslint);
        }
        viteConfig.plugins.push((0, vite_plugin_eslint_report_1.default)(eslintOptions));
    }
    if ((0, lodash_1.isObject)(userConfig.vite)) {
        // 保证 userConfig.vite 优先级最高
        viteConfig = (0, deepmerge_1.all)([
            (0, config_1.recordMap)(config.chainConfig, context),
            viteConfig,
            userConfig.vite
        ]);
    }
    var devServerConfig = {
        port: commandArgs.port || 3333,
        host: commandArgs.host || '0.0.0.0',
        https: commandArgs.https || false,
        open: getOpen(context)
    };
    var entryExts = /(\.ts|\.tsx|\.js|\.jsx)$/i;
    // 依赖预构建解析入口
    var getAnalysisEntries = function () {
        var _entry = userConfig.entry;
        if (!userConfig.mpa) {
            _entry = { index: [_entry] };
        }
        var entries = Object.keys(_entry).map(function (e) {
            var url = _entry[e][0];
            return entryExts.exec(url) ? url : url + ".*";
        });
        return entries;
    };
    if (!isBuild(command)) {
        return (0, deepmerge_1.all)([
            {
                optimizeDeps: {
                    entries: getAnalysisEntries(),
                    // vite 无法分析 link 的依赖，需要手动加入以下依赖，防止 ice 维护时报错
                    include: ['react-app-renderer', 'create-app-shared'],
                },
                server: devServerConfig,
                plugins: [
                    userConfig.fastRefresh ? (0, plugin_react_refresh_1.default)({
                        // Exclude node_modules and ice runtime
                        exclude: [/node_modules/, /\.ice/]
                    }) : null
                ],
            },
            viteConfig,
        ]);
    }
    else {
        return (0, deepmerge_1.all)([{
                build: {
                    commonjsOptions: {
                        exclude: ['react-app-renderer', 'create-app-shared'],
                    },
                },
            }, viteConfig]);
    }
};
exports.wp2vite = wp2vite;
//# sourceMappingURL=index.js.map