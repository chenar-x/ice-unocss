"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@builder/pack/deps/@babel/core");
var vitePluginLazy = function (routesPath) {
    var routesRegExp = /src\/routes\.(j|t)s(x)?$/;
    return {
        name: 'vite-plugin-lazy',
        enforce: 'pre',
        transform: function (code, id) {
            if (!id.match(routesRegExp)) {
                return;
            }
            var parserPlugins = [
                'jsx',
                'importMeta',
                'topLevelAwait',
                'classProperties',
                'classPrivateMethods',
            ];
            if (/\.tsx?$/.test(id)) {
                // when routes file is a typescript file,
                // add ts parser plugins
                parserPlugins.push('typescript');
                parserPlugins.push('decorators-legacy'); // allowing decorators by default
            }
            var result = (0, core_1.transformSync)(code, {
                babelrc: false,
                configFile: false,
                filename: id,
                parserOpts: {
                    sourceType: 'module',
                    allowAwaitOutsideFunction: true,
                    plugins: parserPlugins,
                },
                generatorOpts: {
                    decoratorsBeforeExport: true
                },
                plugins: [
                    [require.resolve('./babelPluginLazy'), { routesPath: routesPath }]
                ],
                sourceFileName: id,
            });
            return result;
        }
    };
};
exports.default = vitePluginLazy;
//# sourceMappingURL=vitePluginLazy.js.map