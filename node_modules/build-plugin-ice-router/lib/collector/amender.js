"use strict";
/**
 * @file amender.
 * @author tony7lee
 */
Object.defineProperty(exports, "__esModule", { value: true });
var path = require("path");
var glob = require("glob");
var utils_1 = require("../utils");
/**
 * loop amend
 *
 * @param {string} payload
 * @param {*} collect
 */
function loopAmend(payload, collect) {
    collect.forEach(function (item) {
        var routePath = item.routePath, component = item.component, children = item.children;
        // reduce routePath to the nested
        item.routePathAmend = routePath;
        if (payload && payload !== '/') {
            item.routePathAmend = routePath.replace(payload, '');
        }
        // tansform component name
        item.component = (0, utils_1.transformComponentName)(component);
        if (children) {
            loopAmend(routePath, children);
        }
    });
}
/**
 * add default layout
 * default layout: `src/layouts/index.[jsx|tsx]`
 */
function addDefaultLayout(rootDir, routersTempPath, collect) {
    var rootRoute = collect && collect[0];
    // get the js like file
    var layoutJSFilePaths = (0, utils_1.getJsFilePathsIn)(path.join(rootDir, 'src/layouts/index'));
    var defaultLayoutExists = Boolean(layoutJSFilePaths.length);
    var defaultLayoutPath = layoutJSFilePaths[0] || '';
    var defaultLayoutPathRelative = (0, utils_1.formatPathForWin)(path.relative(path.dirname(routersTempPath), defaultLayoutPath));
    if (defaultLayoutExists) {
        // has layout nested such as _layout
        if (rootRoute && rootRoute.routePath === '/') {
            rootRoute.filePath = defaultLayoutPathRelative;
        }
        else {
            var spliceRoutes = collect.splice(0, collect.length);
            collect.push({
                routePath: '/',
                component: 'Layout',
                filePath: defaultLayoutPathRelative,
                isLayoutLike: true,
                children: spliceRoutes
            });
        }
    }
}
/**
 * add default 404
 * default file: `src/pages/404?[/index].[jsx|tsx]`
 */
function addDefault404(rootDir, routersTempPath, collect) {
    var rootRoute = collect && collect[0];
    // get the js like file
    var defaultMatch = path.join(rootDir, 'src/pages/404');
    var extMatch = '.@(ts?(x)|js?(x))';
    var page404JSFilePaths = glob.sync(defaultMatch + "{/index" + extMatch + "," + extMatch + "}");
    var default404Exists = Boolean(page404JSFilePaths.length);
    var default404Path = page404JSFilePaths[0] || '';
    var default404PathRelative = (0, utils_1.formatPathForWin)(path.relative(path.dirname(routersTempPath), default404Path));
    if (default404Exists) {
        var config404 = {
            routePath: '',
            exact: String(false),
            component: 'Page404',
            filePath: default404PathRelative,
            isLayoutLike: false
        };
        if (rootRoute && rootRoute.routePath === '/') {
            // has layout nested such as _layout
            if (!rootRoute.children)
                rootRoute.children = [];
            rootRoute.children.push(config404);
        }
        else if (collect) {
            collect.push(config404);
        }
    }
}
function amender(rootDir, routersTempPath, routesCollect) {
    addDefaultLayout(rootDir, routersTempPath, routesCollect);
    addDefault404(rootDir, routersTempPath, routesCollect);
    loopAmend('', routesCollect);
}
exports.default = amender;
//# sourceMappingURL=amender.js.map