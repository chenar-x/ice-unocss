/// <reference types="react" />
import { History } from 'history';
import { IgnoreOptions } from './collector';
import { IRouterConfig } from '.';
import { RouteItemProps } from './base';
export interface RouterProps {
    routes: RouteItemProps[];
    type?: 'hash' | 'browser' | 'memory' | 'static';
    basename?: string;
    getUserConfirmation?: ((message: string, callback: (ok: boolean) => void) => void);
    forceRefresh?: boolean;
    keyLength?: number;
    hashType?: 'slash' | 'noslash' | 'hashbang';
    initialEntries?: string[];
    initialIndex?: number;
    fallback?: React.ReactNode;
    children?: React.ReactChildren;
    history: History;
}
export interface RoutesProps {
    routes: IRouterConfig[];
    fallback?: React.ReactNode;
}
export interface IRouterOptions {
    caseSensitive?: boolean;
    ignoreRoutes?: IgnoreOptions;
    ignorePaths?: IgnoreOptions;
    configPath?: string;
    lazy?: boolean;
}
